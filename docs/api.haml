!!! html
%html
  %head
    %title Poll Everywhere API
  %body
    %header
      %h1 Poll Everywhere API Documentation

    %section
      %p This API assumes that you are familar with the low-level semantics of HTTP, including the use of tools like cURL, and JSON.
      
      %h1 Authentication
      %p HTTP Basic authentication is currently used for logging into Poll Everywhere accounts. More information can be found at <a href="http://en.wikipedia.org/HTTP Basic">Wikipedia</a>.

      %h1 We use JSON
      %p Simple JSON key-value data structures are used throughout the API application to persist and modify data to the web application. Typically resources will include a root key that corresponds with the name of the name of the resource; from example, multiple choice polls all have the root key 'multiple_choice_poll'.

      %h1 Polls
      %h2 Multiple choice polls
      %p These polls are great for collecting structured information from audiences if you want to define a set of answers that participants may choose from.

      %h3 Attributes
      %dl.attributes
        %dt=PollEverywhere::MultipleChoicePoll.root_key
        %dd Root key for multiple choice poll data.
        %dd
          %dl
            -PollEverywhere::MultipleChoicePoll.props.each do |_, prop|
              %dt=prop.name
              %dd=prop.description
              -if prop.name == :options
                %dd
                  %dl
                    -PollEverywhere::MultipleChoicePoll::Option.props.each do |_, prop|
                      %dt=prop.name
                      %dd=prop.description
      %h3 Creating a multiple choice poll
      :ruby
        example do
          @mcp = PollEverywhere::MultipleChoicePoll.from_hash(:title => 'Hey dude!', :options => %w[red blue green]).save
        end
      
      %h3 Changing the title of a multiple choice poll
      :ruby
        example do
          @mcp.title = "I like different titles"
          @mcp.save
        end

      %h3 Closing and opening multiple choice polls
      %p To close a poll, change the state to "closed"
      :ruby
        example do
          @mcp.stop
        end
      
      %p To open it back up (and allow responses to come on through) change the state to "opened"
      :ruby
        example do
          @mcp.start
        end

      %h3 Delete a multiple choice poll
      %p When you're totally finished with the poll and you want to tidy things up a bit, you can delete polls
      :ruby
        example do
          @mcp.destroy
        end
      
      %h2 Free text polls
      %p These polls are used to collect short answers or unstructured responses from participants.
      %h3 Attributes
      %dl.attributes
        %dt=PollEverywhere::FTP.root_key
        %dd Root key for free text poll data.
        %dd
          %dl
            -PollEverywhere::FTP.props.each do |_, prop|
              %dt=prop.name
              %dd=prop.description

      %h3 Create free text polls
      %p Creating a free text poll is similar to building a multiple choice poll, just without the options attribute.
      :ruby
        example do
          @ftp = PollEverywhere::FreeTextPoll.from_hash(:title => "What is the meaning of life?").save
        end
    
      %h3 Modify a free text poll
      %p Change the title attribute to change the poll
      :ruby
        example do
          @ftp.state = "opened"
          @ftp.save
        end

      %h3 Delete a free text poll
      :ruby
        example do
          @ftp.destroy
        end

    %footer
      %p
        This documentation was automatically generated by the Poll Everywhere rubygem at
        =succeed '.' do
          %a(href="http://github.com/polleverywhere/polleverywhere") http://github.com/polleverywhere/polleverywhere
        Community support for the API is available on the
        %a(href="http://groups.google.com/group/polleverywhere-dev") Poll Everywhere Developer mailing list
        and paid professional support at
        =succeed '.' do
          %a(href="http://www.polleverywhere.com/professional-support") Poll Everywhere